import { useEffect, useState } from "react";
import { Table, Button, Spin, Tag } from "antd";
import { DownloadOutlined } from "@ant-design/icons";
import axios from "axios";

function ReportsHistoryPage() {
  const [reports, setReports] = useState([]);
  const [loading, setLoading] = useState(false);

  const fetchReports = async () => {
    try {
      setLoading(true);
      const token = localStorage.getItem("token");

      const res = await axios.get("http://localhost:5000/api/reports", {
        headers: { Authorization: `Bearer ${token}` },
      });

      setReports(res.data);
    } catch (error) {
      console.error("Error fetching reports:", error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchReports();
  }, []);

  const downloadReport = (fileUrl) => {
    const link = document.createElement("a");
    link.href = `/${fileUrl}`; // ðŸ“‚ si ton fichier est sur serveur public ou uploadÃ©
    link.download = fileUrl;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  const columns = [
    {
      title: "Generated By",
      dataIndex: ["generatedByUserId", "email"],
      key: "generatedByUserId",
      render: (email) => email || "Unknown",
    },
    {
      title: "Report Type",
      dataIndex: "reportType",
      key: "reportType",
      render: (type) => (
        <Tag
          color={
            type === "daily" ? "green" : type === "weekly" ? "blue" : "purple"
          }
        >
          {type.toUpperCase()}
        </Tag>
      ),
    },
    {
      title: "Period Start",
      dataIndex: "reportPeriodStart",
      key: "reportPeriodStart",
      render: (date) => new Date(date).toLocaleDateString(),
    },
    {
      title: "Period End",
      dataIndex: "reportPeriodEnd",
      key: "reportPeriodEnd",
      render: (date) => new Date(date).toLocaleDateString(),
    },
    {
      title: "File",
      dataIndex: "fileUrl",
      key: "fileUrl",
    },
    // {
    //   title: "Actions",
    //   key: "actions",
    //   render: (_, record) => (
    //     <Button
    //       type="primary"
    //       icon={<DownloadOutlined />}
    //       onClick={() => downloadReport(record.fileUrl)}
    //     >
    //       Download
    //     </Button>
    //   ),
    // },
  ];

  if (loading) {
    return (
      <div style={{ textAlign: "center", padding: "50px" }}>
        <Spin size="large" />
      </div>
    );
  }

  return (
    <div style={{ padding: "24px" }}>
      <h2
        style={{ textAlign: "center", marginBottom: "24px", color: "#1890ff" }}
      >
        Reports History
      </h2>

      <Table
        columns={columns}
        dataSource={reports}
        rowKey="_id"
        pagination={{ pageSize: 8 }}
      />
    </div>
  );
}

export default ReportsHistoryPage;
